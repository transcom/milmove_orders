// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/transcom/milmove_orders/pkg/gen/ordersmessages"
)

// GetOrdersCountReader is a Reader for the GetOrdersCount structure.
type GetOrdersCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrdersCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrdersCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrdersCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOrdersCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrdersCountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrdersCountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrdersCountOK creates a GetOrdersCountOK with default headers values
func NewGetOrdersCountOK() *GetOrdersCountOK {
	return &GetOrdersCountOK{}
}

/*GetOrdersCountOK handles this case with default header values.

Successful
*/
type GetOrdersCountOK struct {
	Payload *ordersmessages.OrdersCount
}

func (o *GetOrdersCountOK) Error() string {
	return fmt.Sprintf("[GET /issuers/{issuer}/count][%d] getOrdersCountOK  %+v", 200, o.Payload)
}

func (o *GetOrdersCountOK) GetPayload() *ordersmessages.OrdersCount {
	return o.Payload
}

func (o *GetOrdersCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ordersmessages.OrdersCount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrdersCountBadRequest creates a GetOrdersCountBadRequest with default headers values
func NewGetOrdersCountBadRequest() *GetOrdersCountBadRequest {
	return &GetOrdersCountBadRequest{}
}

/*GetOrdersCountBadRequest handles this case with default header values.

Invalid
*/
type GetOrdersCountBadRequest struct {
}

func (o *GetOrdersCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /issuers/{issuer}/count][%d] getOrdersCountBadRequest ", 400)
}

func (o *GetOrdersCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrdersCountUnauthorized creates a GetOrdersCountUnauthorized with default headers values
func NewGetOrdersCountUnauthorized() *GetOrdersCountUnauthorized {
	return &GetOrdersCountUnauthorized{}
}

/*GetOrdersCountUnauthorized handles this case with default header values.

must be authenticated to use this endpoint
*/
type GetOrdersCountUnauthorized struct {
}

func (o *GetOrdersCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /issuers/{issuer}/count][%d] getOrdersCountUnauthorized ", 401)
}

func (o *GetOrdersCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrdersCountForbidden creates a GetOrdersCountForbidden with default headers values
func NewGetOrdersCountForbidden() *GetOrdersCountForbidden {
	return &GetOrdersCountForbidden{}
}

/*GetOrdersCountForbidden handles this case with default header values.

Forbidden
*/
type GetOrdersCountForbidden struct {
}

func (o *GetOrdersCountForbidden) Error() string {
	return fmt.Sprintf("[GET /issuers/{issuer}/count][%d] getOrdersCountForbidden ", 403)
}

func (o *GetOrdersCountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOrdersCountInternalServerError creates a GetOrdersCountInternalServerError with default headers values
func NewGetOrdersCountInternalServerError() *GetOrdersCountInternalServerError {
	return &GetOrdersCountInternalServerError{}
}

/*GetOrdersCountInternalServerError handles this case with default header values.

Server error
*/
type GetOrdersCountInternalServerError struct {
}

func (o *GetOrdersCountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /issuers/{issuer}/count][%d] getOrdersCountInternalServerError ", 500)
}

func (o *GetOrdersCountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
