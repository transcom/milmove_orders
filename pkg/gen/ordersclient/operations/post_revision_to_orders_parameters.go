// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/transcom/milmove_orders/pkg/gen/ordersmessages"
)

// NewPostRevisionToOrdersParams creates a new PostRevisionToOrdersParams object
// with the default values initialized.
func NewPostRevisionToOrdersParams() *PostRevisionToOrdersParams {
	var ()
	return &PostRevisionToOrdersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostRevisionToOrdersParamsWithTimeout creates a new PostRevisionToOrdersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostRevisionToOrdersParamsWithTimeout(timeout time.Duration) *PostRevisionToOrdersParams {
	var ()
	return &PostRevisionToOrdersParams{

		timeout: timeout,
	}
}

// NewPostRevisionToOrdersParamsWithContext creates a new PostRevisionToOrdersParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostRevisionToOrdersParamsWithContext(ctx context.Context) *PostRevisionToOrdersParams {
	var ()
	return &PostRevisionToOrdersParams{

		Context: ctx,
	}
}

// NewPostRevisionToOrdersParamsWithHTTPClient creates a new PostRevisionToOrdersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostRevisionToOrdersParamsWithHTTPClient(client *http.Client) *PostRevisionToOrdersParams {
	var ()
	return &PostRevisionToOrdersParams{
		HTTPClient: client,
	}
}

/*PostRevisionToOrdersParams contains all the parameters to send to the API endpoint
for the post revision to orders operation typically these are written to a http.Request
*/
type PostRevisionToOrdersParams struct {

	/*Revision*/
	Revision *ordersmessages.Revision
	/*UUID
	  UUID of the orders to amend

	*/
	UUID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post revision to orders params
func (o *PostRevisionToOrdersParams) WithTimeout(timeout time.Duration) *PostRevisionToOrdersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post revision to orders params
func (o *PostRevisionToOrdersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post revision to orders params
func (o *PostRevisionToOrdersParams) WithContext(ctx context.Context) *PostRevisionToOrdersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post revision to orders params
func (o *PostRevisionToOrdersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post revision to orders params
func (o *PostRevisionToOrdersParams) WithHTTPClient(client *http.Client) *PostRevisionToOrdersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post revision to orders params
func (o *PostRevisionToOrdersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRevision adds the revision to the post revision to orders params
func (o *PostRevisionToOrdersParams) WithRevision(revision *ordersmessages.Revision) *PostRevisionToOrdersParams {
	o.SetRevision(revision)
	return o
}

// SetRevision adds the revision to the post revision to orders params
func (o *PostRevisionToOrdersParams) SetRevision(revision *ordersmessages.Revision) {
	o.Revision = revision
}

// WithUUID adds the uuid to the post revision to orders params
func (o *PostRevisionToOrdersParams) WithUUID(uuid strfmt.UUID) *PostRevisionToOrdersParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the post revision to orders params
func (o *PostRevisionToOrdersParams) SetUUID(uuid strfmt.UUID) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *PostRevisionToOrdersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Revision != nil {
		if err := r.SetBodyParam(o.Revision); err != nil {
			return err
		}
	}

	// path param uuid
	if err := r.SetPathParam("uuid", o.UUID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
